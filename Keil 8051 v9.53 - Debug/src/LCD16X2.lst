C51 COMPILER V9.53.0.0   LCD16X2                                                           01/22/2018 00:09:33 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE LCD16X2
OBJECT MODULE PLACED IN .\src\LCD16X2.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\sxmchxn
                    -\SimplicityStudio\v4_workspace\Humidity_Temperature_LCD_4bits\src\LCD16X2.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WAR
                    -NINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:/Users/sxmchxn/Simpli
                    -cityStudio/v4_workspace/Humidity_Temperature_LCD_4bits/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.4
                    -//Device/shared/si8051base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.4//Device/EFM8BB1/inc) PRINT(.\sr
                    -c\LCD16X2.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\LCD16X2.OBJ)

line level    source

   1          /*
   2           * LCD16X2.c
   3           *
   4           *  Created on: Jan 21, 2018
   5           *      Author: sxmchxn
   6           */
   7          
   8          #include <SI_EFM8BB1_Register_Enums.h>
   9          #include <stdio.h>
  10          #include "DHT11.h"
  11          #include "utils.h"
  12          #include "LCD16X2.h"
  13          
  14          uint8_t lcd_data_8bits = 0;
  15          
  16          uint8_t line0[17] = {0};
  17          char line1[17] = {0};
  18          
  19          
  20          void lcd_e_pulse ()
  21          {
  22   1              // the 12 MHz sysclk period is 81 nanoseconds
  23   1              // SETB P1.1 takes two cycles
  24   1              // each NOP takes one cycle
  25   1              // CLR P1.1 takes two cycles
  26   1              // the LCD_E latch stays high for ~500 nanoseconds
  27   1      
  28   1              LCD_DATA_4BITS = lcd_data_8bits >> 4;
  29   1              LCD_E = 1;
  30   1              _nop_();
  31   1              _nop_();
  32   1              _nop_();
  33   1              _nop_();
  34   1              LCD_E = 0;
  35   1      
  36   1              LCD_DATA_4BITS = lcd_data_8bits;
  37   1              LCD_E = 1;
  38   1              _nop_();
  39   1              _nop_();
  40   1              _nop_();
  41   1              _nop_();
  42   1              LCD_E = 0;
  43   1              delay_us(50);
  44   1      }
  45          
  46          void lcd_initialize()
  47          {
  48   1              // wait for HD44780 LCD to be ready
  49   1              delay_us(50000);
  50   1      
  51   1              // select the instruction register to send commands
C51 COMPILER V9.53.0.0   LCD16X2                                                           01/22/2018 00:09:33 PAGE 2   

  52   1              // pull down the enable pin
  53   1              LCD_RS = 0;
  54   1              LCD_E = 0;
  55   1      
  56   1              // set function for 4 bit, two line mode
  57   1              lcd_data_8bits = 0x28;
  58   1              lcd_e_pulse();
  59   1      
  60   1              // set function for left-to-right entry mode, disable screen shifting
  61   1              lcd_data_8bits = 0x06;
  62   1              lcd_e_pulse();
  63   1      
  64   1              // turn on display with blinking cursor
  65   1              lcd_data_8bits = 0x0f;
  66   1              lcd_e_pulse();
  67   1      
  68   1              // clear display and return cursor to home, this needs some extra delay
  69   1              lcd_data_8bits = 0x01;
  70   1              lcd_e_pulse();
  71   1              delay_us(2000);
  72   1      }
  73          
  74          void print_to_lcd()
  75          {
  76   1              char* current_character;
  77   1              sprintf(line0, "DHT11: %d\xDF\C %d%%", temperature, humidity);
  78   1              sprintf(line1, "BME280 %d\xDF\C %d%%", temperature, humidity);
  79   1      
  80   1              // clear display
  81   1              LCD_RS = 0;
  82   1              lcd_data_8bits = 0x01;
  83   1              lcd_e_pulse();
  84   1              delay_us(2000);
  85   1      
  86   1              // change to data register
  87   1              LCD_RS = 1;
  88   1      
  89   1              // pause for effect
  90   1              delay_ms(500);
  91   1              // write out line0
  92   1              current_character = line0;
  93   1              do {
  94   2                      lcd_data_8bits = *current_character;
  95   2                      lcd_e_pulse();
  96   2              } while(*((current_character++)+1) != 0);
  97   1      
  98   1              // move cursor to second line
  99   1              LCD_RS = 0;
 100   1              lcd_data_8bits = 0xc0;
 101   1              lcd_e_pulse();
 102   1      
 103   1              // change to data register
 104   1              LCD_RS = 1;
 105   1      
 106   1              // pause for effect
 107   1              delay_ms(500);
 108   1              // write out line1
 109   1              current_character = line1;
 110   1              do {
 111   2                      lcd_data_8bits = *current_character;
 112   2                      lcd_e_pulse();
 113   2              } while(*((current_character++)+1) != 0);
 114   1      }
C51 COMPILER V9.53.0.0   LCD16X2                                                           01/22/2018 00:09:33 PAGE 3   

 115          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    256    ----
   CONSTANT SIZE    =     34    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     35       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

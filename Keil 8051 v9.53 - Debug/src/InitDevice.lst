C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/22/2018 00:07:43 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\sxmchxn
                    -\SimplicityStudio\v4_workspace\Humidity_Temperature_LCD_4bits\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) 
                    -WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:/Users/sxmchxn/Sim
                    -plicityStudio/v4_workspace/Humidity_Temperature_LCD_4bits/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.
                    -0.4//Device/shared/si8051base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.4//Device/EFM8BB1/inc) PRINT(.
                    -\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_DefaultMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              WDT_0_enter_DefaultMode_from_RESET();
  25   1              PORTS_0_enter_DefaultMode_from_RESET();
  26   1              PORTS_1_enter_DefaultMode_from_RESET();
  27   1              PBCFG_0_enter_DefaultMode_from_RESET();
  28   1              CLOCK_0_enter_DefaultMode_from_RESET();
  29   1              TIMER16_2_enter_DefaultMode_from_RESET();
  30   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  31   1              SMBUS_0_enter_DefaultMode_from_RESET();
  32   1              // [Config Calls]$
  33   1      
  34   1      }
  35          
  36          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  37   1              // $[P0 - Port 0 Pin Latch]
  38   1              /***********************************************************************
  39   1               - P0.0 is low. Set P0.0 to drive low
  40   1               - P0.1 is low. Set P0.1 to drive low
  41   1               - P0.2 is high. Set P0.2 to drive or float high
  42   1               - P0.3 is low. Set P0.3 to drive low
  43   1               - P0.4 is low. Set P0.4 to drive low
  44   1               - P0.5 is low. Set P0.5 to drive low
  45   1               - P0.6 is low. Set P0.6 to drive low
  46   1               - P0.7 is low. Set P0.7 to drive low
  47   1               ***********************************************************************/
  48   1              P0 = P0_B0__LOW | P0_B1__LOW | P0_B2__HIGH | P0_B3__LOW | P0_B4__LOW
  49   1                              | P0_B5__LOW | P0_B6__LOW | P0_B7__LOW;
  50   1              // [P0 - Port 0 Pin Latch]$
  51   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/22/2018 00:07:43 PAGE 2   

  52   1              // $[P0MDOUT - Port 0 Output Mode]
  53   1              /***********************************************************************
  54   1               - P0.0 output is open-drain
  55   1               - P0.1 output is open-drain
  56   1               - P0.2 output is open-drain
  57   1               - P0.3 output is push-pull
  58   1               - P0.4 output is push-pull
  59   1               - P0.5 output is push-pull
  60   1               - P0.6 output is push-pull
  61   1               - P0.7 output is push-pull
  62   1               ***********************************************************************/
  63   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
  64   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__PUSH_PULL
  65   1                              | P0MDOUT_B4__PUSH_PULL | P0MDOUT_B5__PUSH_PULL
  66   1                              | P0MDOUT_B6__PUSH_PULL | P0MDOUT_B7__PUSH_PULL;
  67   1              // [P0MDOUT - Port 0 Output Mode]$
  68   1      
  69   1              // $[P0MDIN - Port 0 Input Mode]
  70   1              // [P0MDIN - Port 0 Input Mode]$
  71   1      
  72   1              // $[P0SKIP - Port 0 Skip]
  73   1              // [P0SKIP - Port 0 Skip]$
  74   1      
  75   1              // $[P0MASK - Port 0 Mask]
  76   1              // [P0MASK - Port 0 Mask]$
  77   1      
  78   1              // $[P0MAT - Port 0 Match]
  79   1              // [P0MAT - Port 0 Match]$
  80   1      
  81   1      }
  82          
  83          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
  84   1              // $[P1 - Port 1 Pin Latch]
  85   1              /***********************************************************************
  86   1               - P1.0 is low. Set P1.0 to drive low
  87   1               - P1.1 is low. Set P1.1 to drive low
  88   1               - P1.2 is low. Set P1.2 to drive low
  89   1               - P1.3 is low. Set P1.3 to drive low
  90   1               ***********************************************************************/
  91   1              P1 = P1_B0__LOW | P1_B1__LOW | P1_B2__LOW | P1_B3__LOW;
  92   1              // [P1 - Port 1 Pin Latch]$
  93   1      
  94   1              // $[P1MDOUT - Port 1 Output Mode]
  95   1              /***********************************************************************
  96   1               - P1.0 output is push-pull
  97   1               - P1.1 output is push-pull
  98   1               - P1.2 output is push-pull
  99   1               - P1.3 output is push-pull
 100   1               ***********************************************************************/
 101   1              P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__PUSH_PULL
 102   1                              | P1MDOUT_B2__PUSH_PULL | P1MDOUT_B3__PUSH_PULL;
 103   1              // [P1MDOUT - Port 1 Output Mode]$
 104   1      
 105   1              // $[P1MDIN - Port 1 Input Mode]
 106   1              // [P1MDIN - Port 1 Input Mode]$
 107   1      
 108   1              // $[P1SKIP - Port 1 Skip]
 109   1              // [P1SKIP - Port 1 Skip]$
 110   1      
 111   1              // $[P1MASK - Port 1 Mask]
 112   1              // [P1MASK - Port 1 Mask]$
 113   1      
 114   1              // $[P1MAT - Port 1 Match]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/22/2018 00:07:43 PAGE 3   

 115   1              // [P1MAT - Port 1 Match]$
 116   1      
 117   1      }
 118          
 119          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 120   1              // $[XBR2 - Port I/O Crossbar 2]
 121   1              /***********************************************************************
 122   1               - Weak Pullups enabled 
 123   1               - Crossbar enabled
 124   1               ***********************************************************************/
 125   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED;
 126   1              // [XBR2 - Port I/O Crossbar 2]$
 127   1      
 128   1              // $[PRTDRV - Port Drive Strength]
 129   1              // [PRTDRV - Port Drive Strength]$
 130   1      
 131   1              // $[XBR0 - Port I/O Crossbar 0]
 132   1              /***********************************************************************
 133   1               - UART I/O unavailable at Port pin
 134   1               - SPI I/O unavailable at Port pins
 135   1               - SMBus 0 I/O routed to Port pins
 136   1               - CP0 unavailable at Port pin
 137   1               - Asynchronous CP0 unavailable at Port pin
 138   1               - CP1 unavailable at Port pin
 139   1               - Asynchronous CP1 unavailable at Port pin
 140   1               - SYSCLK unavailable at Port pin
 141   1               ***********************************************************************/
 142   1              XBR0 = XBR0_URT0E__DISABLED | XBR0_SPI0E__DISABLED | XBR0_SMB0E__ENABLED
 143   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 144   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 145   1              // [XBR0 - Port I/O Crossbar 0]$
 146   1      
 147   1              // $[XBR1 - Port I/O Crossbar 1]
 148   1              // [XBR1 - Port I/O Crossbar 1]$
 149   1      
 150   1      }
 151          
 152          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
 153   1              // $[WDTCN - Watchdog Timer Control]
 154   1              //Disable Watchdog with key sequence
 155   1              WDTCN = 0xDE; //First key
 156   1              WDTCN = 0xAD; //Second key
 157   1              // [WDTCN - Watchdog Timer Control]$
 158   1      
 159   1      }
 160          
 161          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 162   1              // $[CLKSEL - Clock Select]
 163   1              /***********************************************************************
 164   1               - Clock derived from the Internal High-Frequency Oscillator
 165   1               - SYSCLK is equal to selected clock source divided by 2
 166   1               ***********************************************************************/
 167   1              CLKSEL = CLKSEL_CLKSL__HFOSC | CLKSEL_CLKDIV__SYSCLK_DIV_2;
 168   1              // [CLKSEL - Clock Select]$
 169   1      
 170   1      }
 171          
 172          extern void TIMER16_2_enter_DefaultMode_from_RESET(void) {
 173   1              // $[Timer Initialization]
 174   1              // Save Timer Configuration
 175   1              uint8_t TMR2CN0_TR2_save;
 176   1              TMR2CN0_TR2_save = TMR2CN0 & TMR2CN0_TR2__BMASK;
 177   1              // Stop Timer
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/22/2018 00:07:43 PAGE 4   

 178   1              TMR2CN0 &= ~(TMR2CN0_TR2__BMASK);
 179   1              // [Timer Initialization]$
 180   1      
 181   1              // $[TMR2CN0 - Timer 2 Control]
 182   1              // [TMR2CN0 - Timer 2 Control]$
 183   1      
 184   1              // $[TMR2H - Timer 2 High Byte]
 185   1              // [TMR2H - Timer 2 High Byte]$
 186   1      
 187   1              // $[TMR2L - Timer 2 Low Byte]
 188   1              // [TMR2L - Timer 2 Low Byte]$
 189   1      
 190   1              // $[TMR2RLH - Timer 2 Reload High Byte]
 191   1              /***********************************************************************
 192   1               - Timer 2 Reload High Byte = 0xA0
 193   1               ***********************************************************************/
 194   1              TMR2RLH = (0xA0 << TMR2RLH_TMR2RLH__SHIFT);
 195   1              // [TMR2RLH - Timer 2 Reload High Byte]$
 196   1      
 197   1              // $[TMR2RLL - Timer 2 Reload Low Byte]
 198   1              /***********************************************************************
 199   1               - Timer 2 Reload Low Byte = 0x4C
 200   1               ***********************************************************************/
 201   1              TMR2RLL = (0x4C << TMR2RLL_TMR2RLL__SHIFT);
 202   1              // [TMR2RLL - Timer 2 Reload Low Byte]$
 203   1      
 204   1              // $[TMR2CN0]
 205   1              // [TMR2CN0]$
 206   1      
 207   1              // $[Timer Restoration]
 208   1              // Restore Timer Configuration
 209   1              TMR2CN0 |= TMR2CN0_TR2_save;
 210   1              // [Timer Restoration]$
 211   1      
 212   1      }
 213          
 214          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 215   1              // $[CKCON0 - Clock Control 0]
 216   1              /***********************************************************************
 217   1               - System clock divided by 12
 218   1               - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 219   1               - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 220   1               - Timer 2 low byte uses the system clock
 221   1               - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 222   1               - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 223   1               - Timer 1 uses the clock defined by the prescale field, SCA
 224   1               ***********************************************************************/
 225   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_12 | CKCON0_T0M__PRESCALE
 226   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__SYSCLK
 227   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 228   1                              | CKCON0_T1M__PRESCALE;
 229   1              // [CKCON0 - Clock Control 0]$
 230   1      
 231   1              // $[TMOD - Timer 0/1 Mode]
 232   1              /***********************************************************************
 233   1               - Mode 1, 16-bit Counter/Timer
 234   1               - Mode 0, 13-bit Counter/Timer
 235   1               - Timer Mode
 236   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 237   1               - Timer Mode
 238   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 239   1               ***********************************************************************/
 240   1              TMOD = TMOD_T0M__MODE1 | TMOD_T1M__MODE0 | TMOD_CT0__TIMER
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/22/2018 00:07:43 PAGE 5   

 241   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 242   1              // [TMOD - Timer 0/1 Mode]$
 243   1      
 244   1              // $[TCON - Timer 0/1 Control]
 245   1              /***********************************************************************
 246   1               - Start Timer 0 running
 247   1               ***********************************************************************/
 248   1              TCON |= TCON_TR0__RUN;
 249   1              // [TCON - Timer 0/1 Control]$
 250   1      
 251   1      }
 252          
 253          extern void SMBUS_0_enter_DefaultMode_from_RESET(void) {
 254   1              // $[SMB0ADR - SMBus 0 Slave Address]
 255   1              // [SMB0ADR - SMBus 0 Slave Address]$
 256   1      
 257   1              // $[SMB0ADM - SMBus 0 Slave Address Mask]
 258   1              // [SMB0ADM - SMBus 0 Slave Address Mask]$
 259   1      
 260   1              // $[SMB0TC - SMBus 0 Timing and Pin Control]
 261   1              // [SMB0TC - SMBus 0 Timing and Pin Control]$
 262   1      
 263   1              // $[SMB0CF - SMBus 0 Configuration]
 264   1              /***********************************************************************
 265   1               - Enable the SMBus module
 266   1               ***********************************************************************/
 267   1              SMB0CF |= SMB0CF_ENSMB__ENABLED;
 268   1              // [SMB0CF - SMBus 0 Configuration]$
 269   1      
 270   1      }
 271          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     86    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
